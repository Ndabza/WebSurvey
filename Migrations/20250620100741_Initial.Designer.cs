// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebSurvey.Data;

#nullable disable

namespace WebSurvey.Migrations
{
    [DbContext(typeof(SurveyContext))]
    [Migration("20250620100741_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("WebSurvey.Models.Answer", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<int>("Choice")
                        .HasColumnType("INTEGER");

                    b.Property<string>("QuestionId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId")
                        .IsUnique();

                    b.ToTable("Answer");

                    b.HasData(
                        new
                        {
                            Id = "1e9de402-2f16-454e-b9ef-c3554611b40f",
                            Choice = 1,
                            QuestionId = "d10badf2-92b1-4dea-ae50-1a00afff1b22"
                        },
                        new
                        {
                            Id = "5f36ae6a-e026-435a-87fe-5447ced78b4f",
                            Choice = 2,
                            QuestionId = "01d458f3-90d8-484c-8afb-a4da18da0cb5"
                        },
                        new
                        {
                            Id = "46f1be5e-4d86-4444-a839-dade250c7b6e",
                            Choice = 5,
                            QuestionId = "20ff91ad-8fb6-43ac-af35-6b90e89b0b38"
                        },
                        new
                        {
                            Id = "28124810-f760-4f04-85a1-a15d29ccb285",
                            Choice = 3,
                            QuestionId = "75ca4016-f6a8-4247-a16b-e355c8e43077"
                        },
                        new
                        {
                            Id = "c7185c3a-76fc-4491-ab56-1205250341eb",
                            Choice = 3,
                            QuestionId = "d10badf2-92b1-4dea-ae50-1a00afff1b22"
                        },
                        new
                        {
                            Id = "191bd139-83c0-4cc4-a968-92acde83de4d",
                            Choice = 2,
                            QuestionId = "01d458f3-90d8-484c-8afb-a4da18da0cb5"
                        },
                        new
                        {
                            Id = "e2aa65dc-47f4-452e-8014-1b658cc38890",
                            Choice = 2,
                            QuestionId = "20ff91ad-8fb6-43ac-af35-6b90e89b0b38"
                        },
                        new
                        {
                            Id = "e93e8e15-31c0-4b0c-b58a-43619c1abb4e",
                            Choice = 1,
                            QuestionId = "75ca4016-f6a8-4247-a16b-e355c8e43077"
                        },
                        new
                        {
                            Id = "32e1ab9e-c4a7-407e-8683-89f86af59af6",
                            Choice = 2,
                            QuestionId = "d10badf2-92b1-4dea-ae50-1a00afff1b22"
                        },
                        new
                        {
                            Id = "095ae3cb-6a87-4e2c-8beb-33049c76b5cd",
                            Choice = 3,
                            QuestionId = "01d458f3-90d8-484c-8afb-a4da18da0cb5"
                        },
                        new
                        {
                            Id = "19bc8763-7bfc-4cf8-9bde-679e157af5a3",
                            Choice = 5,
                            QuestionId = "20ff91ad-8fb6-43ac-af35-6b90e89b0b38"
                        },
                        new
                        {
                            Id = "da423657-3e2d-4b23-86ce-dae9ba1465de",
                            Choice = 3,
                            QuestionId = "75ca4016-f6a8-4247-a16b-e355c8e43077"
                        },
                        new
                        {
                            Id = "722a577f-d7e1-49a6-bc1a-e754408c98e8",
                            Choice = 5,
                            QuestionId = "d10badf2-92b1-4dea-ae50-1a00afff1b22"
                        },
                        new
                        {
                            Id = "70db3c34-d81a-43a3-8104-87c3f7445dbb",
                            Choice = 4,
                            QuestionId = "01d458f3-90d8-484c-8afb-a4da18da0cb5"
                        },
                        new
                        {
                            Id = "78defed4-14a6-42bf-a07d-f3b175c941d3",
                            Choice = 4,
                            QuestionId = "20ff91ad-8fb6-43ac-af35-6b90e89b0b38"
                        },
                        new
                        {
                            Id = "e912d393-93a0-4180-b1ef-3d745483d730",
                            Choice = 3,
                            QuestionId = "75ca4016-f6a8-4247-a16b-e355c8e43077"
                        });
                });

            modelBuilder.Entity("WebSurvey.Models.FaveriteFood", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("FoodTypeId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PersonId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FoodTypeId")
                        .IsUnique();

                    b.HasIndex("PersonId");

                    b.ToTable("FaveriteFood");

                    b.HasData(
                        new
                        {
                            Id = "9afbcd83-8a22-46ff-b229-4d0e4f167bfc",
                            FoodTypeId = "6656db56-52c3-42e2-829c-5714f13a7358",
                            PersonId = "07731156-43e2-4f5e-b06f-a686df76b62b"
                        },
                        new
                        {
                            Id = "877f9631-10f9-4955-bc46-283ae50d52dc",
                            FoodTypeId = "98081994-871b-4312-a06a-93f9651c6d38",
                            PersonId = "07731156-43e2-4f5e-b06f-a686df76b62b"
                        },
                        new
                        {
                            Id = "819afaaa-c124-4314-adac-c36755c6b59d",
                            FoodTypeId = "da1c824c-82a6-46bd-a21a-0c0a038e6172",
                            PersonId = "07731156-43e2-4f5e-b06f-a686df76b62b"
                        },
                        new
                        {
                            Id = "94be6ad3-d1b7-4e50-90c1-65f1407a226d",
                            FoodTypeId = "33a0750f-943e-46c0-8027-97709fdc4964",
                            PersonId = "33ed7e2d-48f1-4fdb-97e4-3fe0ede9f607"
                        },
                        new
                        {
                            Id = "26b66a88-43e5-4dc7-a15b-40043ece342e",
                            FoodTypeId = "98081994-871b-4312-a06a-93f9651c6d38",
                            PersonId = "33ed7e2d-48f1-4fdb-97e4-3fe0ede9f607"
                        },
                        new
                        {
                            Id = "e5f745f9-a92e-49ad-9c10-dcf517af1f1f",
                            FoodTypeId = "33a0750f-943e-46c0-8027-97709fdc4964",
                            PersonId = "3950a04c-b7e5-4ded-a898-41e28b5dcb29"
                        },
                        new
                        {
                            Id = "a7a7d1a2-3e11-409f-a497-d361c64b3e9a",
                            FoodTypeId = "6656db56-52c3-42e2-829c-5714f13a7358",
                            PersonId = "3950a04c-b7e5-4ded-a898-41e28b5dcb29"
                        },
                        new
                        {
                            Id = "6d3fc311-608e-4be8-b614-5dd2028244d9",
                            FoodTypeId = "98081994-871b-4312-a06a-93f9651c6d38",
                            PersonId = "3950a04c-b7e5-4ded-a898-41e28b5dcb29"
                        },
                        new
                        {
                            Id = "bb8af322-55da-43b7-a465-bd157523b3ec",
                            FoodTypeId = "da1c824c-82a6-46bd-a21a-0c0a038e6172",
                            PersonId = "3950a04c-b7e5-4ded-a898-41e28b5dcb29"
                        },
                        new
                        {
                            Id = "91a808e2-170b-4efd-b283-3725eb3ac100",
                            FoodTypeId = "98081994-871b-4312-a06a-93f9651c6d38",
                            PersonId = "af16d0fa-48e3-49bf-9a4c-79f737683b99"
                        },
                        new
                        {
                            Id = "3ee6e9ce-6a5c-4a3c-943c-1c0c7149b977",
                            FoodTypeId = "33a0750f-943e-46c0-8027-97709fdc4964",
                            PersonId = "af16d0fa-48e3-49bf-9a4c-79f737683b99"
                        });
                });

            modelBuilder.Entity("WebSurvey.Models.FoodType", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("FoodName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("FoodType");

                    b.HasData(
                        new
                        {
                            Id = "33a0750f-943e-46c0-8027-97709fdc4964",
                            FoodName = "Pizza"
                        },
                        new
                        {
                            Id = "6656db56-52c3-42e2-829c-5714f13a7358",
                            FoodName = "Pasta"
                        },
                        new
                        {
                            Id = "98081994-871b-4312-a06a-93f9651c6d38",
                            FoodName = "Pap and Wors"
                        },
                        new
                        {
                            Id = "da1c824c-82a6-46bd-a21a-0c0a038e6172",
                            FoodName = "Other"
                        });
                });

            modelBuilder.Entity("WebSurvey.Models.Person", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("FullNames")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Person");

                    b.HasData(
                        new
                        {
                            Id = "07731156-43e2-4f5e-b06f-a686df76b62b",
                            ContactNumber = "444555",
                            DateOfBirth = new DateTime(1997, 8, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ndaba.ndabenhle@mail.com",
                            FullNames = "Ndabenhle Ndaba"
                        },
                        new
                        {
                            Id = "33ed7e2d-48f1-4fdb-97e4-3fe0ede9f607",
                            ContactNumber = "1112233",
                            DateOfBirth = new DateTime(1998, 5, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ndlovu.sakhile@mail.com",
                            FullNames = "Sakhile Ndlovu"
                        },
                        new
                        {
                            Id = "3950a04c-b7e5-4ded-a898-41e28b5dcb29",
                            ContactNumber = "2265598",
                            DateOfBirth = new DateTime(1999, 7, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "nkosi.anathi@mail.com",
                            FullNames = "Anathi Nkosi"
                        },
                        new
                        {
                            Id = "af16d0fa-48e3-49bf-9a4c-79f737683b99",
                            ContactNumber = "4455864",
                            DateOfBirth = new DateTime(2000, 10, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "sibisi.thamsanqa@mail.com",
                            FullNames = "Thamsanqa Sibisi"
                        });
                });

            modelBuilder.Entity("WebSurvey.Models.Question", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("SurveyQuestion")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Question");

                    b.HasData(
                        new
                        {
                            Id = "d10badf2-92b1-4dea-ae50-1a00afff1b22",
                            SurveyQuestion = "I like to watch movies."
                        },
                        new
                        {
                            Id = "01d458f3-90d8-484c-8afb-a4da18da0cb5",
                            SurveyQuestion = "I like to listen to radio."
                        },
                        new
                        {
                            Id = "20ff91ad-8fb6-43ac-af35-6b90e89b0b38",
                            SurveyQuestion = "I like to eat out."
                        },
                        new
                        {
                            Id = "75ca4016-f6a8-4247-a16b-e355c8e43077",
                            SurveyQuestion = "I like to watch TV."
                        });
                });

            modelBuilder.Entity("WebSurvey.Models.Survey", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("PersonId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PersonId")
                        .IsUnique();

                    b.ToTable("Survey");

                    b.HasData(
                        new
                        {
                            Id = "ccc21cf6-4e8d-4872-9730-cb9383b3105c",
                            PersonId = "07731156-43e2-4f5e-b06f-a686df76b62b"
                        },
                        new
                        {
                            Id = "bdd4a411-1c29-41e3-ae62-f84758387745",
                            PersonId = "33ed7e2d-48f1-4fdb-97e4-3fe0ede9f607"
                        },
                        new
                        {
                            Id = "f39c0c72-8415-42a4-b902-9315514a862b",
                            PersonId = "3950a04c-b7e5-4ded-a898-41e28b5dcb29"
                        },
                        new
                        {
                            Id = "98579242-3cdd-4df1-a3f6-ea8c093cc934",
                            PersonId = "af16d0fa-48e3-49bf-9a4c-79f737683b99"
                        });
                });

            modelBuilder.Entity("WebSurvey.Models.SurveyResponse", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("QuestionId")
                        .HasColumnType("TEXT");

                    b.Property<string>("SurveyId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId")
                        .IsUnique();

                    b.HasIndex("SurveyId");

                    b.ToTable("SurveyResponse");

                    b.HasData(
                        new
                        {
                            Id = "f88603a2-4ac2-4157-804f-540507b98ea9",
                            QuestionId = "d10badf2-92b1-4dea-ae50-1a00afff1b22",
                            SurveyId = "ccc21cf6-4e8d-4872-9730-cb9383b3105c"
                        },
                        new
                        {
                            Id = "b986a680-cb1b-4138-804d-b0f0d9c51243",
                            QuestionId = "d10badf2-92b1-4dea-ae50-1a00afff1b22",
                            SurveyId = "bdd4a411-1c29-41e3-ae62-f84758387745"
                        },
                        new
                        {
                            Id = "c6684fe7-60c2-4d23-b133-780868427f96",
                            QuestionId = "d10badf2-92b1-4dea-ae50-1a00afff1b22",
                            SurveyId = "f39c0c72-8415-42a4-b902-9315514a862b"
                        },
                        new
                        {
                            Id = "fc7da992-8e45-4cef-b635-140d88c55cf1",
                            QuestionId = "d10badf2-92b1-4dea-ae50-1a00afff1b22",
                            SurveyId = "98579242-3cdd-4df1-a3f6-ea8c093cc934"
                        },
                        new
                        {
                            Id = "9f769737-6035-462c-9eea-85febaab7d86",
                            QuestionId = "01d458f3-90d8-484c-8afb-a4da18da0cb5",
                            SurveyId = "ccc21cf6-4e8d-4872-9730-cb9383b3105c"
                        },
                        new
                        {
                            Id = "5a85f487-9b38-46d7-9a3c-fc34bc28b4c2",
                            QuestionId = "01d458f3-90d8-484c-8afb-a4da18da0cb5",
                            SurveyId = "bdd4a411-1c29-41e3-ae62-f84758387745"
                        },
                        new
                        {
                            Id = "27912a65-009d-43a6-bc01-83980d4f8873",
                            QuestionId = "01d458f3-90d8-484c-8afb-a4da18da0cb5",
                            SurveyId = "f39c0c72-8415-42a4-b902-9315514a862b"
                        },
                        new
                        {
                            Id = "922fa0dc-11c9-4485-b509-8bb06fd3eb0b",
                            QuestionId = "01d458f3-90d8-484c-8afb-a4da18da0cb5",
                            SurveyId = "98579242-3cdd-4df1-a3f6-ea8c093cc934"
                        },
                        new
                        {
                            Id = "05c8c19c-e2ce-4dfd-80d4-17dec1b636c3",
                            QuestionId = "20ff91ad-8fb6-43ac-af35-6b90e89b0b38",
                            SurveyId = "ccc21cf6-4e8d-4872-9730-cb9383b3105c"
                        },
                        new
                        {
                            Id = "fde11fad-eeea-42ad-ba67-022f97318ed1",
                            QuestionId = "20ff91ad-8fb6-43ac-af35-6b90e89b0b38",
                            SurveyId = "bdd4a411-1c29-41e3-ae62-f84758387745"
                        },
                        new
                        {
                            Id = "5e63e667-fe34-4c0f-a298-c43c1aed8e38",
                            QuestionId = "20ff91ad-8fb6-43ac-af35-6b90e89b0b38",
                            SurveyId = "f39c0c72-8415-42a4-b902-9315514a862b"
                        },
                        new
                        {
                            Id = "d99282c7-e63e-4bb6-a6f5-73e355f31def",
                            QuestionId = "20ff91ad-8fb6-43ac-af35-6b90e89b0b38",
                            SurveyId = "98579242-3cdd-4df1-a3f6-ea8c093cc934"
                        },
                        new
                        {
                            Id = "f617e7ef-862b-4bf7-aa2d-34d049a24b78",
                            QuestionId = "75ca4016-f6a8-4247-a16b-e355c8e43077",
                            SurveyId = "ccc21cf6-4e8d-4872-9730-cb9383b3105c"
                        },
                        new
                        {
                            Id = "856b8293-6935-46b9-b75e-da0dc7125dde",
                            QuestionId = "75ca4016-f6a8-4247-a16b-e355c8e43077",
                            SurveyId = "bdd4a411-1c29-41e3-ae62-f84758387745"
                        },
                        new
                        {
                            Id = "d284b9f1-ab67-4db2-bb24-c2e2954685d4",
                            QuestionId = "75ca4016-f6a8-4247-a16b-e355c8e43077",
                            SurveyId = "f39c0c72-8415-42a4-b902-9315514a862b"
                        },
                        new
                        {
                            Id = "8dbc9e6f-b850-4807-a6f7-4b989409569e",
                            QuestionId = "75ca4016-f6a8-4247-a16b-e355c8e43077",
                            SurveyId = "98579242-3cdd-4df1-a3f6-ea8c093cc934"
                        });
                });

            modelBuilder.Entity("WebSurvey.Models.Answer", b =>
                {
                    b.HasOne("WebSurvey.Models.Question", "Question")
                        .WithOne("Answer")
                        .HasForeignKey("WebSurvey.Models.Answer", "QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("WebSurvey.Models.FaveriteFood", b =>
                {
                    b.HasOne("WebSurvey.Models.FoodType", "FoodType")
                        .WithOne("FaveriteFood")
                        .HasForeignKey("WebSurvey.Models.FaveriteFood", "FoodTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebSurvey.Models.Person", "Person")
                        .WithMany("FavoriteFood")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FoodType");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("WebSurvey.Models.Survey", b =>
                {
                    b.HasOne("WebSurvey.Models.Person", "Person")
                        .WithOne("Survey")
                        .HasForeignKey("WebSurvey.Models.Survey", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("WebSurvey.Models.SurveyResponse", b =>
                {
                    b.HasOne("WebSurvey.Models.Question", "Question")
                        .WithOne("SurveyResponse")
                        .HasForeignKey("WebSurvey.Models.SurveyResponse", "QuestionId");

                    b.HasOne("WebSurvey.Models.Survey", "Survey")
                        .WithMany("SurveyResponse")
                        .HasForeignKey("SurveyId");

                    b.Navigation("Question");

                    b.Navigation("Survey");
                });

            modelBuilder.Entity("WebSurvey.Models.FoodType", b =>
                {
                    b.Navigation("FaveriteFood");
                });

            modelBuilder.Entity("WebSurvey.Models.Person", b =>
                {
                    b.Navigation("FavoriteFood");

                    b.Navigation("Survey");
                });

            modelBuilder.Entity("WebSurvey.Models.Question", b =>
                {
                    b.Navigation("Answer");

                    b.Navigation("SurveyResponse");
                });

            modelBuilder.Entity("WebSurvey.Models.Survey", b =>
                {
                    b.Navigation("SurveyResponse");
                });
#pragma warning restore 612, 618
        }
    }
}
